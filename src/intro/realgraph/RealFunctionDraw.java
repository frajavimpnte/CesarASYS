/*
 * ITESS-TICS
 * ASYSC
 * Agosto-Diciembre 2023
 * Descripci√≥n: 
 * Autor: FJMP & TI501
 * Fecha: 09/noviembre/2023
 * email: 
 */
package intro.realgraph;

import java.awt.BasicStroke;
import tools.Coordinate;

import java.awt.Color;
import java.awt.Graphics2D;

/**
 *
 * @author TICS03
 */
public class RealFunctionDraw extends javax.swing.JFrame {
    private Coordinate coordinate;
    
    public RealFunctionDraw() {
        initComponents();
        
        coordinate = new Coordinate();
        // grafucar de x de 0 a 20, y de 0 a 20
        coordinate.setXMIN(-20);
        coordinate.setXMAX(20);
        coordinate.setYMIN(-20);
        coordinate.setYMAX(20);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGround = new javax.swing.JPanel();
        pnlDraw = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(35, 33, 54));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackGround.setBackground(new java.awt.Color(35, 33, 54));
        getContentPane().add(BackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 470));

        pnlDraw.setBackground(new java.awt.Color(14, 16, 68));
        pnlDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDrawMouseClicked(evt);
            }
        });
        pnlDraw.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(pnlDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 300, 300));

        setBounds(0, 0, 643, 479);
    }// </editor-fold>//GEN-END:initComponents

    private void drawAxis() {
        Graphics2D g = (Graphics2D) pnlDraw.getGraphics();
      
        
       
        g.setColor(Color.DARK_GRAY);
        g.fillRect(0,0, 
                (int)coordinate.getXSCREEN(),
                (int)coordinate.getYSCREEN());
        g.setColor(Color.WHITE);
        g.drawRect(0, 0,
                (int)coordinate.getXSCREEN()-1,
                (int)coordinate.getYSCREEN()-1);
        
        
        //g.drawRect(0,0, 300, 300);
        
        // (XMIN,0)  (XMAX, 0)
        g.setColor(Color.WHITE);
        g.drawLine(
                coordinate.toScreenX(coordinate.getXMIN()),
                coordinate.toScreenY(0.1f),
                coordinate.toScreenX(coordinate.getXMAX()),
                coordinate.toScreenY(0.1f)
        );
        for (float dx = coordinate.getXMIN(); dx < coordinate.getXMAX(); dx += 1.0) {
            g.drawLine(
                coordinate.toScreenX(dx),
                coordinate.toScreenY(0),
                coordinate.toScreenX(dx),
                coordinate.toScreenY(1)
            );
        }
        // (0,YMIN)  (0, YMAX)  y
        g.drawLine(
                coordinate.toScreenX(0.1f),
                coordinate.toScreenY(coordinate.getYMIN()),
                coordinate.toScreenX(0.1f),
                coordinate.toScreenY(coordinate.getYMAX())
        );
        for (float dy = coordinate.getYMIN(); dy < coordinate.getYMAX(); dy += 1.0) {
            g.drawLine(
                coordinate.toScreenX(0),
                coordinate.toScreenY(dy),
                coordinate.toScreenX(1),
                coordinate.toScreenY(dy)
            );
        }
    }
    private void drawFunction(int nPoints) {
        // funcion y = 2x + x^2 + 1
        float dx = (coordinate.getXMAX() - coordinate.getXMIN())/nPoints;
        
        float xr[] = new float[nPoints];
        float yr[] = new float[nPoints];
        for (int i = 0; i < nPoints; i++) {
            xr[i] = coordinate.getXMIN() + i*dx;
            yr[i] = 2*xr[i] + 0.1f*xr[i]*xr[i] + 1;
        }
        
        // draw
        Graphics2D g = (Graphics2D) pnlDraw.getGraphics();
        //g.setColor(Color.black);
        g.setColor(new Color(255, 103, 140));
        g.setStroke(new BasicStroke(3.0f)); 
        for (int i = 0; i < nPoints-1; i++) {
            g.drawLine(
                coordinate.toScreenX(xr[i]),
                coordinate.toScreenY(yr[i]),
                coordinate.toScreenX(xr[i+1]),
                coordinate.toScreenY(yr[i+1])
            );
        }
    }
    private void pnlDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDrawMouseClicked
        // TODO add your handling code here:
        drawAxis();
        drawFunction(100);

    }//GEN-LAST:event_pnlDrawMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {          
                new RealFunctionDraw().setVisible(true);
            }
        });
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackGround;
    private javax.swing.JPanel pnlDraw;
    // End of variables declaration//GEN-END:variables
}
